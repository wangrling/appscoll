<?xml version="1.0" encoding="utf-8"?>
<manifest xmlns:android="http://schemas.android.com/apk/res/android"
          xmlns:tools="http://schemas.android.com/tools"
          package="com.android.home">

    <uses-permission android:name="android.permission.RECEIVE_BOOT_COMPLETED"/>
    <uses-permission android:name="android.permission.VIBRATE"/>
    <!-- 没有WRITE_SETTING -->
    <uses-permission
            android:name="android.permission.WRITE_SETTINGS"
            tools:ignore="ProtectedPermissions"/>
    <uses-permission android:name="android.permission.DISABLE_KEYGUARD"/>
    <uses-permission android:name="android.permission.INTERNET"/>
    <uses-permission android:name="android.permission.ACCESS_NETWORK_STATE"/>
    <uses-permission android:name="android.permission.ACCESS_COARSE_LOCATION" />
    <uses-permission android:name="android.permission.ACCESS_FINE_LOCATION" />
    <uses-permission android:name="android.permission.ACCESS_WIFI_STATE" />

    <uses-permission android:name="com.android.launcher.permission.READ_SETTINGS" />
    <uses-permission android:name="android.permission.READ_PHONE_STATE"/>
    <uses-permission android:name="android.permission.CHANGE_WIFI_STATE" />
    <uses-permission android:name="android.permission.CHANGE_WIFI_MULTICAST_STATE" />


    <uses-permission android:name="android.permission.RECORD_AUDIO"/>
    <uses-permission android:name="android.permission.WAKE_LOCK"/>
    <uses-permission android:name="android.permission.WRITE_EXTERNAL_STORAGE"/>
    <uses-permission android:name="android.permission.READ_EXTERNAL_STORAGE"/>
    <uses-permission android:name="android.permission.READ_PHONE_STATE"/>
    <uses-permission android:name="android.permission.CAMERA"/>
    <uses-permission android:name="android.permission.WAKE_LOCK"/>
    <uses-permission android:name="android.permission.CALL_PHONE"/>
    <uses-permission android:name="android.permission.VIBRATE"/>
    <uses-permission android:name="android.permission.READ_CONTACTS"/>

    <!-- Required to register a SyncStatusObserver to display a "syncing..." progress indicator. -->
    <uses-permission android:name="android.permission.READ_SYNC_STATS"/>
    <!-- Required to enable our SyncAdapter after it's created. -->
    <uses-permission android:name="android.permission.WRITE_SYNC_SETTINGS"/>
    <!-- Required because we're manually creating a new account. -->
    <uses-permission android:name="android.permission.AUTHENTICATE_ACCOUNTS"/>

    <uses-feature android:name="android.hardware.camera"/>
    <uses-feature android:name="android.hardware.camera.autofocus"/>

    <application
            android:icon="@mipmap/home"
            android:label="@string/home"
            android:name=".MyApplication"
            android:theme="@style/Base.AppTheme">

        <activity android:name=".threelibs.gson.ProguardGson" />
        <activity android:name=".threelibs.ThreeLibsSample"/>


        <activity android:name=".threelibs.renderscript.RenderIntrinsic"/>

        <activity android:name=".maplocation.LocationActivity" />
        <activity android:name=".maplocation.NavigationActivity" />

        <activity android:name=".maplocation.ZyfSDKActivity" />
        <meta-data
                android:name="Product_Key"
                android:value="d18d1665b358" />
        <meta-data
                android:name="App_Id"
                android:value="34087mfQ4MLq4S50jP8s4FM6W1m0s5X3" />

        <!-- 声明service组件 -->
        <service
                android:name="com.baidu.location.f"
                android:enabled="true"
                android:process=":remote" >
        </service>
        <!-- AK鉴权 -->
        <!-- meta-data需要写在application中 -->
        <meta-data
                android:name="com.baidu.lbsapi.API_KEY"
                android:value="ucwigCxWzAk74dH36lfuy7aBwi8BvC44" />
        <!-- http://lbsyun.baidu.com/apiconsole/key -->


        <provider
                android:name=".alarmclock.AlarmProvider"
                android:authorities="com.android.home.alarmclock"/>

        <activity
                android:name=".alarmclock.AlarmClock"
                android:label="Alarm"
                android:parentActivityName=".Home"
                android:configChanges="orientation|keyboardHidden|keyboard|navigation"/>

        <activity android:name=".alarmclock.ClockPicker"/>
        <activity android:name=".alarmclock.SetAlarm"/>
        <activity android:name=".alarmclock.SettingsActivity"/>

        <receiver android:name=".alarmclock.AlarmReceiver">
            <intent-filter>
                <action android:name="com.android.home.alarmclock.ALARM_ALERT"/>

                <category android:name="android.intent.category.DEFAULT"/>
            </intent-filter>
        </receiver>

        <service android:name=".alarmclock.AlarmKlaxon">
            <intent-filter>
                <action android:name="com.android.home.alarmclock.ALARM_ALERT" />
            </intent-filter>
        </service>

        <receiver android:name=".alarmclock.AlarmInitReceiver">
            <intent-filter>
                <action android:name="android.intent.action.BOOT_COMPLETED" />
            </intent-filter>
        </receiver>

        <activity android:name=".alarmclock.AlarmAlertFullScreen"/>
        <activity android:name=".alarmclock.AlarmAlert"/>
        <activity android:name=".threelibs.development.DevelopmentActivity"/>
        <activity
                android:name=".calculator.Calculator"
                android:launchMode="singleTask">
            <layout
                    android:minHeight="220dp"
                    android:minWidth="230dp"/>

            <intent-filter>
                <category android:name="android.intent.category.APP_CALCULATOR"/>
            </intent-filter>
        </activity>
        <activity android:name=".threelibs.development.fragments.FragmentExample"/>
        <activity
                android:name=".calendar.AllInOneActivity"
                android:launchMode="singleTask"
                android:theme="@style/CalendarTheme.WithToolbar">
        </activity>

        <activity-alias
                android:name=".calendar.CalendarApplication"
                android:exported="true"
                android:targetActivity=".calendar.AllInOneActivity"/>

        <receiver android:name=".threelibs.widgets.StackWidgetProvider">
            <intent-filter>
                <action android:name="android.appwidget.action.APPWIDGET_UPDATE"/>
            </intent-filter>

            <meta-data
                    android:name="android.appwidget.provider"
                    android:resource="@xml/stackwidgetinfo"/>
        </receiver>

        <service
                android:name=".threelibs.widgets.StackWidgetService"
                android:exported="false"
                android:permission="android.permission.BIND_REMOTEVIEWS"/>

        <activity android:name=".threelibs.autofill.AutoFillActivity"/>
        <activity
                android:label="PeopleRss"
                android:name=".syncadapter.PeopleRssActivity"/>

        <!--
        This service implements our SyncAdapter. It needs to be exported, so that the system
        sync framework can access it.
        -->
        <service
                android:name=".syncadapter.SyncService"
                android:exported="true">

            <!--
            This intent filter is required. It allows the system to launch our sync service
            as needed.
            -->
            <intent-filter>
                <action android:name="android.content.SyncAdapter"/>
            </intent-filter>
            <!-- This points to a required XML file which describes our SyncAdapter. -->
            <meta-data
                    android:name="android.content.SyncAdapter"
                    android:resource="@xml/syncadapter"/>
        </service>
        <!--
        ContentProvider to store feed data.

        The "authorities" here are defined as part of a ContentProvider interface. It's used here
        as an attachment point for the SyncAdapter. See res/xml/syncadapter.xml and
        SyncService.java.

        Since this ContentProvider is not exported, it will not be accessible outside of this app's
        package.
        -->
        <provider
                android:name=".syncadapter.provider.FeedProvider"
                android:authorities="com.android.home.syncadapter"
                android:exported="false"/>

        <!--
        This implements the account we'll use as an attachment point for our SyncAdapter. Since
        our SyncAdapter doesn't need to authenticate the current user (it just fetches a public RSS
        feed), this account's implementation is largely empty.

        It's also possible to attach a SyncAdapter to an existing account provided by another
        package. In that case, this element could be omitted here.
        -->
        <service android:name=".syncadapter.GenericAccountService">

            <!-- Required filter used by the system to launch our account service. -->
            <intent-filter>
                <action android:name="android.accounts.AccountAuthenticator"/>
            </intent-filter>
            <!-- This points to an XMLf ile which describes our account service. -->
            <meta-data
                    android:name="android.accounts.AccountAuthenticator"
                    android:resource="@xml/authenticator"/>
        </service>

        <activity
                android:name=".Home"
                android:launchMode="singleTop">
            <intent-filter>
                <action android:name="android.intent.action.MAIN"/>
                <action android:name="android.intent.action.VIEW"/>

                <category android:name="android.intent.category.LAUNCHER"/>
            </intent-filter>
        </activity>
        <activity android:name=".components.ArchComponents"/>
        <activity android:name=".threelibs.testing.TestingActivity"/>
        <activity android:name=".threelibs.testing.espresso.EspressoBasic">
            <intent-filter>
                <action android:name="android.intent.action.MAIN"/>

                <category android:name="android.intent.category.HOME"/>
            </intent-filter>
        </activity>
        <activity android:name=".threelibs.testing.espresso.ShowTextActivity"/>
        <activity android:name=".threelibs.testing.espresso.CustomMatcher"/>
        <activity android:name=".threelibs.testing.espresso.LongListActivity"/>
        <activity android:name=".threelibs.testing.espresso.IdlingResourceActivity"/>
        <activity android:name=".threelibs.testing.espresso.IntentsBasicActivity"/>
        <activity android:name=".threelibs.testing.espresso.ContactsActivity"/>
        <activity android:name=".threelibs.testing.espresso.IntentsAdvancedActivity"/>
        <activity android:name=".threelibs.testing.espresso.RecyclerViewActivity"/>
        <activity android:name=".threelibs.testing.espresso.WebViewActivity"/>
        <activity android:name=".threelibs.testing.junitrunner.CalculatorActivity"/>
        <activity
                android:name=".todomvp.TodoMvpActivity"
                android:label="@string/todomvp"/>
        <activity
                android:name=".todomvp.statistics.StatisticsActivity"
                android:parentActivityName=".todomvp.TodoMvpActivity"/>
        <activity android:name=".todomvp.addedittask.AddEditTaskActivity"/>
        <activity android:name=".todomvp.taskdetail.TaskDetailActivity"/>
        <activity
                android:name=".threelibs.picasso.PicassoActivity"
                android:label="@string/picasso"/>
        <activity android:name=".threelibs.picasso.PicassoGridViewActivity"/>
        <activity android:name=".threelibs.picasso.PicassoGalleryActivity"/>
        <activity android:name=".threelibs.picasso.PicassoContactsActivity"/>
        <activity android:name=".threelibs.picasso.PicassoListDetailActivity"/>
        <activity android:name=".camerabasic.CameraBasic"/>
        <activity android:name=".plaid.PlaidApp"/>
        <activity android:name=".threelibs.randommusic.RandomMusicPlayer"/>

        <service android:name=".threelibs.randommusic.MusicService">
            <intent-filter>
                <action android:name="com.android.home.randommusic.action.TOGGLE_PLAYBACK"/>
                <action android:name="com.android.home.randommusic.action.PLAY"/>
                <action android:name="com.android.home.randommusic.action.PAUSE"/>
                <action android:name="com.android.home.randommusic.action.STOP"/>
                <action android:name="com.android.home.randommusic.action.SKIP"/>
                <action android:name="com.android.home.randommusic.action.REWIND"/>

                <category android:name="android.intent.category.DEFAULT"/>
            </intent-filter>
            <intent-filter>
                <action android:name="com.android.home.randommusic.action.URL"/>

                <data android:scheme="http"/>
            </intent-filter>
        </service>

        <activity android:name=".soundrecorder.SoundRecorder"/>
        <activity android:name=".threelibs.circleimage.CircleImageActivity"/>
        <activity android:name="com.android.home.threelibs.shimmer.ShimmerActivity"/>
        <activity android:name=".threelibs.rxjavasamples.RxJavaSamples"/>
        <activity android:name=".threelibs.mpchart.MpChart"/>
        <activity
                android:name=".universalmusic.ui.MusicPlayerActivity"
                android:label="Universal Music Player"/>
        <activity android:name=".universalmusic.ui.PlaceholderActivity"/>

        <service android:name=".universalmusic.MusicService">
            <intent-filter>
                <action android:name="android.media.browse.MediaBrowserService"/>
            </intent-filter>
        </service>

        <activity android:name=".universalmusic.ui.NowPlayingActivity"/>
        <activity android:name=".universalmusic.ui.FullScreenPlayerActivity"/>
        <activity android:name=".threelibs.customview.CustomViewActivity"/>
        <activity android:name=".rssimage.DisplayActivity"/>

        <provider
                android:name=".rssimage.DataProvider"
                android:authorities="com.android.home.rssimage"
                android:exported="true"/>

        <service android:name=".rssimage.RSSPullService"/>

        <activity android:name=".stepsensor.BatchStepSensor"/>
        <activity android:name=".displaybitmaps.ui.DisplayBitmaps"/>
        <activity android:name=".displaybitmaps.ui.ImageDetailActivity"/>

        <receiver android:name=".threelibs.development.widget.NewAppWidget">
            <intent-filter>
                <action android:name="android.appwidget.action.APPWIDGET_UPDATE"/>
            </intent-filter>

            <meta-data
                    android:name="android.appwidget.provider"
                    android:resource="@xml/new_app_widget_info"/>
        </receiver>

        <activity android:name=".threelibs.development.sensors.SensorSurvey">
        </activity>
        <activity android:name=".threelibs.development.sensors.TiltSpot">
        </activity>
        <activity android:name=".threelibs.development.profilegpu.ProfileGPU">
        </activity>
        <activity android:name=".threelibs.development.profilegpu.GPUOverdraw">
        </activity>
    </application>

</manifest>